type Mutation {
  createPaymentIntent(duration: Int!, userID: String!, email: String!, jobID: String!): PaymentIntent! @function(name: "CreatePaymentIntent-${env}")
}

type PaymentIntent{
  clientSecret: String!
  amount: Float!
}

enum JOBSTATUS {
  REQUESTED
  ACCEPTED
  IN_SERVICE
  COMPLETED
}

type Job @model @auth(rules: [{allow: public}]) {
  id: ID!
  jobTitle: String!
  jobDescription: String
  address: String!
  city: String!
  zipCode: String!
  duration: Int!
  requestDateTime: String!
  backupProviders: [String!]
  checkInTime: String
  checkOutTime: String
  currentStatus: JOBSTATUS!
  mainProvider: ID @index(name: "byProvider")
  requestOwner: ID! @index(name: "byUser")
  paymentID: String
  price: Float
}

type Provider @model @auth(rules: [{allow: public}]) {
  id: ID!
  subID: String!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phoneNumber: AWSPhone!
  dateOfBirth: AWSDate!
  address: String!
  city: String!
  zipCode: String!
  biography: String!
  profilePictureURL: AWSURL
  backgroundCheckStatus: Boolean!
  employeeID: String!
  offenses: Int!
  overallRating: Float!
  jobs: [Job] @hasMany(indexName: "byProvider", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  subID: String!
  firstName: String!
  lastName: String!
  email: AWSEmail!
  phoneNumber: AWSPhone!
  dateOfBirth: AWSDate
  address: [String!]
  jobs: [Job] @hasMany(indexName: "byUser", fields: ["id"])
}
 